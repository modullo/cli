version: "3"

services:
  business_proxy:
    container_name: "${SERVICE_PROXY_NAME}"
    image: ${SERVICE_PROXY_IMAGE}
    ports:
      - "${SERVICE_PROXY_PORT}:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - dorcas

  business_core_php:
    container_name: "${SERVICE_CORE_PHP_NAME}"
    image: "${SERVICE_CORE_PHP_IMAGE}"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: "${SERVICE_CORE_PHP_NAME}"
      SERVICE_TAGS: dev
    working_dir: "${SERVICE_CORE_PHP_WORKING_DIR}"
    env_file: "${SERVICE_CORE_PHP_ENV_FILE}"
    volumes:
      - "${SERVICE_CORE_PHP_VOLUMES_ENV}"
      - "${SERVICE_CORE_PHP_VOLUMES_PHP_INI}"
      #- ${PWD}/web/cors_settings.conf:/etc/nginx/cors_settings.conf
    depends_on:
      - business_mysql
      - business_redis
      - business_smtp
    networks:
      - dorcas

  business_core_web:
    container_name: "${SERVICE_CORE_WEB_NAME}"
    build:
      context: ./nginx/core
    restart: unless-stopped
    tty: true
    ports:
      - "${SERVICE_CORE_WEB_PORT}:80"
    #volumes:
    #- ${PWD}/web/cors_settings.conf:/etc/nginx/cors_settings.conf
    depends_on:
      - business_core_php
    networks:
      - dorcas
    environment:
      - VIRTUAL_HOST=${SERVICE_CORE_WEB_SUBDOMAIN}.${HOST_DOMAIN}
      - SERVICE_CORE_PHP_NAME=${SERVICE_CORE_PHP_NAME}

  business_hub_php:
    container_name: "${SERVICE_HUB_PHP_NAME}"
    image: "${SERVICE_HUB_PHP_IMAGE}"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: "${SERVICE_HUB_PHP_NAME}"
      SERVICE_TAGS: production
    working_dir: "${SERVICE_HUB_PHP_WORKING_DIR}"
    env_file: "${SERVICE_HUB_PHP_ENV_FILE}"
    volumes:
      - "${SERVICE_HUB_PHP_VOLUMES_ENV}"
      - "${SERVICE_HUB_PHP_VOLUMES_PHP_INI}"
      #- ${PWD}/web/cors_settings.conf:/etc/nginx/cors_settings.conf
    #command: "composer install"
    depends_on:
      - business_mysql
      - business_redis
    # - dorcas_business_smtp
    # command: "php artisan storage:link"
    networks:
      - dorcas

  business_hub_web:
    container_name: "${SERVICE_HUB_WEB_NAME}"
    build:
      context: ./nginx/hub
    restart: unless-stopped
    tty: true
    ports:
      - "${SERVICE_HUB_WEB_PORT}:80"
    #volumes:
    #- ${PWD}/web/cors_settings.conf:/etc/nginx/cors_settings.conf
    depends_on:
      - business_hub_php
      - business_core_web
    networks:
      - dorcas
    environment:
      - VIRTUAL_HOST=${HOST_DOMAIN},store.${HOST_DOMAIN},blog.${HOST_DOMAIN}
      - SERVICE_HUB_PHP_NAME=${SERVICE_HUB_PHP_NAME}

  business_mysql:
    container_name: "${SERVICE_MYSQL_NAME}"
    build:
      context: ./mysql/
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    # tty: true
    ports:
      - "${SERVICE_MYSQL_PORT}:3306"
    volumes:
      - dorcas_business_databases:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${SERVICE_MYSQL_PASSWORD}
      - VIRTUAL_HOST=mysql.dorcashub.test
      - SERVICE_NAME=business_mysql
    networks:
      - dorcas

  business_redis:
    container_name: "${SERVICE_REDIS_NAME}"
    image: "${SERVICE_REDIS_IMAGE}"
    restart: unless-stopped
    tty: true
    ports:
      - "${SERVICE_REDIS_PORT}:6379"
    volumes:
      - dorcas_business_redis:/data
    networks:
      - dorcas
    environment:
      - VIRTUAL_HOST=redis.dorcashub.test

  business_smtp:
    container_name: "${SERVICE_SMTP_NAME}"
    image: "${SERVICE_SMTP_IMAGE}"
    restart: unless-stopped
    tty: true
    ports:
      - "${SERVICE_SMTP_PORT}:1025"
      - "${SERVICE_SMTP_PORT_2}:8025"
    networks:
      - dorcas
    environment:
      - VIRTUAL_HOST=smtp.dorcashub.test

volumes:
  dorcas_business_databases:
    driver: local
  dorcas_business_redis:
    driver: local

networks:
  dorcas:
    driver: bridge
